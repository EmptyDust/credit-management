services:
  # PostgreSQL数据库
  postgres:
    build: ./database
    container_name: credit_management_postgres
    environment:
      POSTGRES_DB: credit_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    networks:
      - credit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d credit_management"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # API网关
  api-gateway:
    build: ./api-gateway
    container_name: credit_management_gateway
    ports:
      - "8080:8080"
    environment:
      - CREDIT_ACTIVITY_SERVICE_URL=http://credit-activity-service:8083
      - AUTH_SERVICE_URL=http://auth-service:8081
      - USER_SERVICE_URL=http://user-service:8084
      - JWT_SECRET=your-secret-key
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - credit_network
    restart: unless-stopped

  # 认证服务
  auth-service:
    build: ./auth-service
    container_name: credit_management_auth
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=credit_management_postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=credit_management
      - DB_SSLMODE=disable
      - JWT_SECRET=your-secret-key

      - REDIS_HOST=credit_management_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - credit_network
    restart: unless-stopped

  # 学分活动服务（合并了事务和申请管理功能）
  credit-activity-service:
    build: ./credit-activity-service
    container_name: credit_management_credit_activity
    ports:
      - "8083:8083"
    environment:
      - DB_HOST=credit_management_postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=credit_management
      - DB_SSLMODE=disable
    volumes:
      - attachment_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - credit_network
    restart: unless-stopped

  # 统一用户服务（合并了用户管理、学生信息、教师信息服务）
  user-service:
    build: ./user-service
    container_name: credit_management_user
    ports:
      - "8084:8084"
    environment:
      - DB_HOST=credit_management_postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=credit_management
      - DB_SSLMODE=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - credit_network
    restart: unless-stopped

  # 前端应用
  frontend:
    build: ./frontend
    container_name: credit_management_frontend
    user: root
    ports:
      - "3000:80"
    depends_on:
      api-gateway:
        condition: service_started
    networks:
      - credit_network
    restart: unless-stopped

  redis:
    image: docker.io/library/redis:7.2-alpine
    container_name: credit_management_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - credit_network
    environment:
      - TZ=Asia/Shanghai
      - REDIS_HOST=credit_management_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password # 新增
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 10

volumes:
  postgres_data:
    driver: local
  affair_uploads:
    driver: local
  attachment_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  credit_network:
    driver: bridge
